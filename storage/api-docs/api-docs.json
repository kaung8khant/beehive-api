{
    "openapi": "3.0.0",
    "info": {
        "title": "Beehive commerce API",
        "description": "This API is used by Beehive Mobile Apps and web application",
        "contact": {
            "email": "aungthu.moe@hiveinnovate.com"
        },
        "version": "2.0.0"
    },
    "paths": {
        "/api/v2/admin/login": {
            "post": {
                "tags": [
                    "UserAuth"
                ],
                "summary": "User login",
                "description": "Login as a system user",
                "operationId": "adminLogin",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/v2/admin/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get list of brands",
                "description": "Returns list of brand",
                "operationId": "getBrandLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a brand",
                "description": "Returns newly created brand",
                "operationId": "storeBrand",
                "requestBody": {
                    "description": "Created brand object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/brands/{slug}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get One Brand",
                "description": "Returns a requested brand",
                "operationId": "showBrands",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested brand",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update a brand",
                "description": "Update a requested brands",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a brands",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New city data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete One Brand",
                "description": "Delete one specific brand",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested brand",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/cities": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get list of cities",
                "description": "Returns list of cities",
                "operationId": "getCityLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cities"
                ],
                "summary": "Create a city",
                "description": "Returns newly created city",
                "operationId": "storeCity",
                "requestBody": {
                    "description": "Created city object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/City"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/cities/{slug}": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get One City",
                "description": "Returns a requested city",
                "operationId": "showCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cities"
                ],
                "summary": "Update a city",
                "description": "Update a requested city",
                "operationId": "updateCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New city data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/City"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cities"
                ],
                "summary": "Delete One City",
                "description": "Delete one specific city",
                "operationId": "showCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/townships": {
            "get": {
                "tags": [
                    "Townships"
                ],
                "summary": "Get list of townships",
                "description": "Returns list of townships",
                "operationId": "getTownshipLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Townships"
                ],
                "summary": "Create a township",
                "description": "Returns newly created township",
                "operationId": "storeTownship",
                "requestBody": {
                    "description": "Created township object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Township"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/townships/{slug}": {
            "get": {
                "tags": [
                    "Townships"
                ],
                "summary": "Get One Township",
                "description": "Returns a requested township",
                "operationId": "showTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Townships"
                ],
                "summary": "Update a township",
                "description": "Update a requested township",
                "operationId": "updateTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New township data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Township"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Townships"
                ],
                "summary": "Delete One Township",
                "description": "Delete one specific township",
                "operationId": "deleteTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/cities/{slug}/townships": {
            "get": {
                "tags": [
                    "Townships"
                ],
                "summary": "Get townships By city",
                "description": "Returns list of townships",
                "operationId": "getTownshipListsByCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Brand Name"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Brand"
                }
            },
            "City": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "City Name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "မြို့အမည်"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "City"
                }
            },
            "Township": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Tamwe"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "တာမွေ"
                    },
                    "city_slug": {
                        "type": "string",
                        "example": "8998B3"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Township"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}