{
    "openapi": "3.0.0",
    "info": {
        "title": "Beehive commerce API",
        "description": "This API is used by Beehive Mobile Apps and web application",
        "contact": {
            "email": "aungthu.moe@hiveinnovate.com"
        },
        "version": "2.0.0"
    },
    "paths": {
        "/api/v2/admin/login": {
            "post": {
                "tags": [
                    "UserAuth"
                ],
                "summary": "User login",
                "description": "Login as a system user",
                "operationId": "adminLogin",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/v2/admin/brands": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get list of brands",
                "description": "Returns list of brand",
                "operationId": "getBrandLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Brands"
                ],
                "summary": "Create a brand",
                "description": "Returns newly created brand",
                "operationId": "storeBrand",
                "requestBody": {
                    "description": "Created brand object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/brands/{slug}": {
            "get": {
                "tags": [
                    "Brands"
                ],
                "summary": "Get One Brand",
                "description": "Returns a requested brand",
                "operationId": "showBrands",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested brand",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Brands"
                ],
                "summary": "Update a brand",
                "description": "Update a requested brands",
                "operationId": "updateBrand",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a brands",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New city data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Brands"
                ],
                "summary": "Delete One Brand",
                "description": "Delete one specific brand",
                "operationId": "deleteBrand",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested brand",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/cities": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get list of cities",
                "description": "Returns list of cities",
                "operationId": "getCityLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Cities"
                ],
                "summary": "Create a city",
                "description": "Returns newly created city",
                "operationId": "storeCity",
                "requestBody": {
                    "description": "Created city object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/City"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/cities/{slug}": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get One City",
                "description": "Returns a requested city",
                "operationId": "showCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Cities"
                ],
                "summary": "Update a city",
                "description": "Update a requested city",
                "operationId": "updateCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New city data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/City"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Cities"
                ],
                "summary": "Delete One City",
                "description": "Delete one specific city",
                "operationId": "showCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns list of products",
                "operationId": "getProductLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a product",
                "description": "Returns newly created product",
                "operationId": "storeProduct",
                "requestBody": {
                    "description": "Created product object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/products/{slug}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get One Product",
                "description": "Returns a requested product",
                "operationId": "showProduct",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Update a requested product",
                "operationId": "updateProduct",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New product data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete One Product",
                "description": "Delete one specific product",
                "operationId": "deleteProduct",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/{slug}/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Products By Shop",
                "description": "Returns requested list of products",
                "operationId": "getProductsByShop",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/products/toggle-enable/{slug}": {
            "patch": {
                "tags": [
                    "Products"
                ],
                "summary": "Enable Product",
                "description": "Enable a product",
                "operationId": "enableProduct",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/brands/{slug}/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get Products By Brand",
                "description": "Returns requested list of products",
                "operationId": "getProductsByBrand",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Brand",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/product-variations": {
            "get": {
                "tags": [
                    "Product Variations"
                ],
                "summary": "Get list of product variations",
                "description": "Returns list of product variations",
                "operationId": "getProductVariationLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product Variations"
                ],
                "summary": "Create a product variation",
                "description": "Returns newly created product variation",
                "operationId": "storeProductVariation",
                "requestBody": {
                    "description": "Created product variation object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductVariation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/product-variations/{slug}": {
            "get": {
                "tags": [
                    "Product Variations"
                ],
                "summary": "Get One Product Variation",
                "description": "Returns a requested product variation",
                "operationId": "showProductVariation",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested product variation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Product Variations"
                ],
                "summary": "Update a product variation",
                "description": "Update a requested product variation",
                "operationId": "updateProductVariation",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a product variation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New product variation data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductVariation"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product Variations"
                ],
                "summary": "Delete One Product Variation",
                "description": "Delete one specific product variation",
                "operationId": "deleteProductVariation",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested product variation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/products/{slug}/product-variations": {
            "get": {
                "tags": [
                    "Product Variations"
                ],
                "summary": "Get Product Variations By Product",
                "description": "Returns requested list of product variations",
                "operationId": "getProductVariationsByProduct",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Product",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/product-variation-values": {
            "get": {
                "tags": [
                    "Product Variation Values"
                ],
                "summary": "Get list of product variaiton values",
                "description": "Returns list of product variation values",
                "operationId": "getProductVariationValueLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product Variation Values"
                ],
                "summary": "Create list of product variation value",
                "description": "Returns list of newly created product variation value",
                "operationId": "storeProductVariationValue",
                "requestBody": {
                    "description": "Created product variation value list of object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductVariationValue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/product-variation-values/{slug}": {
            "get": {
                "tags": [
                    "Product Variation Values"
                ],
                "summary": "Get One Product Variation Value",
                "description": "Returns a requested product variation value",
                "operationId": "showProductVariationValue",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested product variation value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product variation value",
                "description": "Update a requested product variation value",
                "operationId": "updateProductVariationValue",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a product variation value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New product variation value data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductVariationValue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product Variation Values"
                ],
                "summary": "Delete One Product variation value",
                "description": "Delete one specific product variation value",
                "operationId": "deleteProductVariationValue",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested product variation value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/product-variations/{slug}/product-variation-values": {
            "get": {
                "tags": [
                    "Product Variation Values"
                ],
                "summary": "Get Product Variation Values By Product variation",
                "description": "Returns requested list of product variation values",
                "operationId": "getProductVariationValuesByProductVariation",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the product variation",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurant-branches": {
            "get": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Get list of restaurant branches",
                "description": "Returns list of restaurant branches",
                "operationId": "getRestaurantBranchLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Create a restaurant branch",
                "description": "Returns newly created restaurant branch",
                "operationId": "storeRestaurantBranch",
                "requestBody": {
                    "description": "Created restaurant branch object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestaurantBranch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurant-branches/{slug}": {
            "get": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Get One Restaurant Branch",
                "description": "Returns a requested restaurant branch",
                "operationId": "showRestaurantBranch",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested restaurant branch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Update a restaurant branch",
                "description": "Update a requested restaurant branch",
                "operationId": "updateRestaurantBranch",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a restaurant branch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New restaurant branch data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestaurantBranch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Delete One Restaurant Branch",
                "description": "Delete one specific restaurant branch",
                "operationId": "deleteRestaurantBranch",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested restaurant branch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurants/{slug}/restaurant-branches": {
            "get": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Get Branches By Restaurant",
                "description": "Returns requested list of restaurant branches",
                "operationId": "getBranchesByRestaurant",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/townships/{slug}/restaurant-branches": {
            "get": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Get Branches By Restaurant",
                "description": "Returns requested list of restaurant branches",
                "operationId": "getBranchesByTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurant-branches/toggle-enable/{slug}": {
            "patch": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Enable Restaurant Branch",
                "description": "Enable a restaurant branch",
                "operationId": "enableRestaurantBranch",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the restaurant branch",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurant-branches/add-available-menus/{slug}": {
            "post": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Add available menus",
                "description": "Returns newly added available menus",
                "operationId": "addAvailableMenus",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the menu",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Added available menus",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestaurantBranch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurant-branches/remove-available-menus/{slug}": {
            "post": {
                "tags": [
                    "Restaurant Branches"
                ],
                "summary": "Remvoe available menus",
                "description": "Returns newly removed available menus",
                "operationId": "removeAvailableMenus",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the menu",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Removed available menus",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestaurantBranch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurants": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get list of restaurants",
                "description": "Returns list of restaurants",
                "operationId": "getRestaurantLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Create a restaurant",
                "description": "Returns newly created restaurant",
                "operationId": "storeRestaurant",
                "requestBody": {
                    "description": "Created restaurant object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurants/{slug}": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Get One Restaurant",
                "description": "Returns a requested restaurant",
                "operationId": "showRestaurant",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Update a restaurant",
                "description": "Update a requested restaurant",
                "operationId": "updateRestaurant",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New restaurant data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Delete One Restaurant",
                "description": "Delete one specific restaurant",
                "operationId": "deleteRestaurant",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurants/toggle-enable/{slug}": {
            "patch": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Enable Restaurant",
                "description": "Enable a restaurant",
                "operationId": "enableRestaurant",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurants/add-restaurant-categories/{slug}": {
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Add restaurant categories",
                "description": "Returns newly added restaurant categories",
                "operationId": "addRestaurantCategories",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Added restaurant categories",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/restaurants/remove-restaurant-categories/{slug}": {
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Remove restaurant categories",
                "description": "Returns newly removed restaurant categories",
                "operationId": "removeRestaurantCategories",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of the Restaurant",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Removed restaurant categores",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Restaurant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shop-categories": {
            "get": {
                "tags": [
                    "Shop Category"
                ],
                "summary": "Get list of shop categories",
                "description": "Returns list of shop categories",
                "operationId": "getShopCategoryLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shop Category"
                ],
                "summary": "Create a Shop Category",
                "description": "Returns newly created shop category",
                "operationId": "storeShopCategory",
                "requestBody": {
                    "description": "Created shop category object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shop-categories/{slug}": {
            "get": {
                "tags": [
                    "Shop Category"
                ],
                "summary": "Get One Shop Category",
                "description": "Returns a requested shop category",
                "operationId": "showShopCategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shop Category"
                ],
                "summary": "Update a Shop Category",
                "description": "Update a requested shop category",
                "operationId": "updateShopCategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New shop category data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shop Category"
                ],
                "summary": "Delete One Shop Category",
                "description": "Delete one specific shop category",
                "operationId": "deleteShopCategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/{slug}/shop-categories": {
            "get": {
                "tags": [
                    "Shop Category"
                ],
                "summary": "Get Shop Categories By Shop",
                "description": "Returns list of shop categories",
                "operationId": "getshopCategoryListsByShop",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Get list of shops",
                "description": "Returns list of shops",
                "operationId": "getShopLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Create a Shop",
                "description": "Returns newly created shop",
                "operationId": "storeShop",
                "requestBody": {
                    "description": "Created shop object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shop"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/{slug}": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Get One Shop",
                "description": "Returns a requested shop",
                "operationId": "showShop",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Shops"
                ],
                "summary": "Update a Shop",
                "description": "Update a requested shop",
                "operationId": "updateShop",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New shop data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Shop"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Shops"
                ],
                "summary": "Delete One Shop",
                "description": "Delete one specific shop",
                "operationId": "deleteShop",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/toggle-enable/{slug}": {
            "patch": {
                "tags": [
                    "Shops"
                ],
                "summary": "Toggle Enable a Shop",
                "description": "Toggle Enable a requested shop",
                "operationId": "toggleEnable",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/toggle-official/{slug}": {
            "patch": {
                "tags": [
                    "Shops"
                ],
                "summary": "Toggle Official a Shop",
                "description": "Toggle Official a requested shop",
                "operationId": "toggleOfficial",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/add-shop-categories/{slug}": {
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Add ShopCategories",
                "description": "Add ShopCategories in a shop",
                "operationId": "addShopCategories",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Add ShopCategories in a shop",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "properties": {
                                    "available_categories": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "example": "CB965585"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/remove-shop-categories/{slug}": {
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Remove ShopCategories",
                "description": "Remove ShopCategories in a shop",
                "operationId": "removeShopCategories",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Remove ShopCategories in a shop",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "properties": {
                                    "available_categories": {
                                        "type": "array",
                                        "items": {
                                            "oneOf": [
                                                {
                                                    "type": "string",
                                                    "example": "CB965585"
                                                }
                                            ]
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/sub-categories": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Get list of subcategories",
                "description": "Returns list of subcategories",
                "operationId": "getSubcategoryLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Create a Subcategory",
                "description": "Returns newly created subcategory",
                "operationId": "storeSubcategory",
                "requestBody": {
                    "description": "Created subcategory object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopSubCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/sub-categories/{slug}": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Get One Subcategory",
                "description": "Returns a requested subcategory",
                "operationId": "showSubcategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested subcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Update a Subcategory",
                "description": "Update a requested subcategory",
                "operationId": "updateSubCategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a subcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New subcategory data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopSubCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Delete One Subcategory",
                "description": "Delete one specific subcategory",
                "operationId": "deleteSubcategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested subcategory",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shop-categories/{slug}/sub-categories": {
            "get": {
                "tags": [
                    "Subcategories"
                ],
                "summary": "Get Subcategories By Shop Category",
                "description": "Returns list of subcategories",
                "operationId": "getSubCategoriesByCategory",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shop-tags": {
            "get": {
                "tags": [
                    "ShopTags"
                ],
                "summary": "Get list of shop tags",
                "description": "Returns list of shop tags",
                "operationId": "getShopTagLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "ShopTags"
                ],
                "summary": "Create a Shop Tag",
                "description": "Returns newly created shop tag",
                "operationId": "storeShopTag",
                "requestBody": {
                    "description": "Created shop tag object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopTag"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shop-tags/{slug}": {
            "get": {
                "tags": [
                    "ShopTags"
                ],
                "summary": "Get One Shop Tag",
                "description": "Returns a requested shop tag",
                "operationId": "showShopTag",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "ShopTags"
                ],
                "summary": "Update a shop tag",
                "description": "Update a requested shop tag",
                "operationId": "updateShopTag",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a shop tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New shop tag data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShopTag"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ShopTags"
                ],
                "summary": "Delete One Shop Tag",
                "description": "Delete one specific shop tag",
                "operationId": "deleteShopTag",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested Shop Tag",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/shops/{slug}/shop-tags": {
            "get": {
                "tags": [
                    "ShopTags"
                ],
                "summary": "Get Shop tags By Shop",
                "description": "Returns list of shop tags",
                "operationId": "getShopTagsByShop",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/townships": {
            "get": {
                "tags": [
                    "Townships"
                ],
                "summary": "Get list of townships",
                "description": "Returns list of townships",
                "operationId": "getTownshipLists",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current Page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Townships"
                ],
                "summary": "Create a township",
                "description": "Returns newly created township",
                "operationId": "storeTownship",
                "requestBody": {
                    "description": "Created township object",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Township"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/townships/{slug}": {
            "get": {
                "tags": [
                    "Townships"
                ],
                "summary": "Get One Township",
                "description": "Returns a requested township",
                "operationId": "showTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Townships"
                ],
                "summary": "Update a township",
                "description": "Update a requested township",
                "operationId": "updateTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug to identify a township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New township data to be updated.",
                    "required": true,
                    "content": {
                        "applications/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Township"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Townships"
                ],
                "summary": "Delete One Township",
                "description": "Delete one specific township",
                "operationId": "deleteTownship",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested township",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v2/admin/cities/{slug}/townships": {
            "get": {
                "tags": [
                    "Townships"
                ],
                "summary": "Get townships By city",
                "description": "Returns list of townships",
                "operationId": "getTownshipListsByCity",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Slug of a requested city",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Brand": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Brand Name"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Brand"
                }
            },
            "City": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "City Name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "မြို့အမည်"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "City"
                }
            },
            "Product": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Product Name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "အမည်"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description"
                    },
                    "description_mm": {
                        "type": "string",
                        "example": "ဖော်ပြချက်"
                    },
                    "price": {
                        "type": "decimal",
                        "example": 0
                    },
                    "shop_slug": {
                        "type": "string",
                        "example": "shop_slug"
                    },
                    "shop_category_slug": {
                        "type": "string",
                        "example": "shop_category_slug"
                    },
                    "shop_sub_category_slug": {
                        "type": "string",
                        "example": "shop_sub_category_slug"
                    },
                    "brand_slug": {
                        "type": "string",
                        "example": "brand_slug"
                    },
                    "is_enable": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product"
                }
            },
            "ProductVariation": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Variation Name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "အမည်"
                    },
                    "product_slug": {
                        "type": "string",
                        "example": "Product Slug"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product Variation"
                }
            },
            "ProductVariationValue": {
                "properties": {
                    "value": {
                        "type": "string",
                        "example": "value"
                    },
                    "price": {
                        "type": "decimal",
                        "example": 0
                    },
                    "product_variation_slug": {
                        "type": "string",
                        "example": "product_variation_slug"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Product Variation Value"
                }
            },
            "Restaurant": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Restaurant Name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "ဆိုင်အမည်"
                    },
                    "is_enable": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "availableTags": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "example": "CB965585"
                                }
                            ]
                        }
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Restaurant"
                }
            },
            "RestaurantBranch": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "name_mm"
                    },
                    "address": {
                        "type": "string",
                        "example": "address"
                    },
                    "contact_number": {
                        "type": "string",
                        "example": "string"
                    },
                    "opening_time": {
                        "type": "time",
                        "example": "00:00"
                    },
                    "closing_time": {
                        "type": "time",
                        "example": "00:00"
                    },
                    "latitude": {
                        "type": "double",
                        "example": "0.00"
                    },
                    "longitude": {
                        "type": "double",
                        "example": "0.00"
                    },
                    "restaurant_slug": {
                        "type": "string",
                        "example": "restaurant_slug"
                    },
                    "township_slug": {
                        "type": "string",
                        "example": "township_slug"
                    },
                    "is_enable": {
                        "type": "boolean",
                        "example": "true"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "RestaurantBranch"
                }
            },
            "Shop": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "အမည်"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    },
                    "is_official": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_enable": {
                        "type": "boolean",
                        "example": true
                    },
                    "address": {
                        "type": "string",
                        "example": "somewhere"
                    },
                    "contact_number": {
                        "type": "string",
                        "example": "09444456321"
                    },
                    "opening_time": {
                        "type": "string",
                        "example": "06:09:00"
                    },
                    "closing_time": {
                        "type": "string",
                        "example": "21:51:00"
                    },
                    "latitude": {
                        "type": "number",
                        "example": 16.888501
                    },
                    "longitude": {
                        "type": "number",
                        "example": 96.199375
                    },
                    "township_slug": {
                        "type": "string",
                        "example": "CB91EE"
                    },
                    "shop_tags": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "example": "CB965585"
                                }
                            ]
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Shop"
                }
            },
            "ShopCategory": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "ShopCategory Name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "ShopCategory အမည်"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopCategory"
                }
            },
            "ShopSubCategory": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "အမည်"
                    },
                    "shop_category_slug": {
                        "type": "string",
                        "example": "E1367A"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopSubCategory"
                }
            },
            "ShopTag": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "name"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "အမည်"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ShopTag"
                }
            },
            "Township": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Tamwe"
                    },
                    "name_mm": {
                        "type": "string",
                        "example": "တာမွေ"
                    },
                    "city_slug": {
                        "type": "string",
                        "example": "8998B3"
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object",
                "xml": {
                    "name": "Township"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "in": "header",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}